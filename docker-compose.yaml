services:
  db:
    image: "postgres:latest"
    restart: always
    container_name: postgres_fastapi
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "stepan", "-d", "lunch" ]
      interval: 5s
      retries: 5
      start_period: 10s
    networks:
      - fastapi_network

  backend:
    restart: always
    build: .
    container_name: backend_fastapi
    command: ["/entrypoint.sh"]
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      test_db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - fastapi_network

  test_db:
    image: postgres:latest
    container_name: test_db
    restart: always
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "test_user", "-d", "test_db" ]
      interval: 5s
      retries: 5
      start_period: 10s
    networks:
      - fastapi_network

networks:
  fastapi_network:
    name: lunch-voting-app_fastapi_network
    driver: bridge

volumes:
  postgres_data:
